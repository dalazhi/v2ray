
name: Update V2Ray Nodes
on:
  # 定时触发器：每4小时运行一次
  schedule:
    - cron: '0 */4 * * *'
  # 手动触发器
  workflow_dispatch:

jobs:
  update-nodes:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # 使用token获取写权限
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      # 步骤2：下载源配置文件
      - name: Download source files
        run: |
          # 下载链接1的原始节点文件
          curl -s -o source.yaml https://raw.githubusercontent.com/go4sharing/sub/refs/heads/main/sub.yaml
          # 下载链接2的格式模板文件
          curl -s -o template.yaml https://raw.githubusercontent.com/dalazhi/v2ray/refs/heads/main/data/all.yaml

      # 步骤3：转换节点格式（示例逻辑，需根据实际格式调整）
      - name: Transform node format
        run: |
          # 这里假设使用yq工具处理YAML文件
          # 实际转换逻辑需要根据两个文件的具体格式编写
          # 示例：提取源文件的节点信息并转换为目标格式
          yq eval '.proxies' source.yaml > extracted_nodes.yaml
          yq eval '.proxies = load("extracted_nodes.yaml")' template.yaml > v2ray/all.yaml

          # 如果没有yq工具，可以使用python脚本处理
          # python3 transform_nodes.py source.yaml template.yaml v2ray/all.yaml

      # 步骤4：提交变更
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add v2ray/all.yaml
          git diff --quiet && git diff --staged --quiet || (git commit -m "Auto update nodes at $(date +'%Y-%m-%d %H:%M:%S')" && git push)
