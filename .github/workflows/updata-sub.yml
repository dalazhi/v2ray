name: Generate Proxies with Top Level
on:
  schedule:
    - cron: "0 */2 * * *"
  workflow_dispatch:

jobs:
  format-proxies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取全量历史避免推送冲突

      - name: Install yq v4
        run: |
          # 安装前检查依赖
          sudo apt-get update && sudo apt-get install -y curl
          # 安装 yq v4 并添加到 PATH
          curl -fsSL https://install.yq.sh | sh -s -- -b $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          # 验证版本
          yq_version=$(yq --version)
          if [[ ! $yq_version =~ ^v4 ]]; then
            echo "Error: yq v4 is required (current version: $yq_version)"
            exit 1
          fi

      - name: Fetch raw configuration
        run: |
          # 下载配置文件并添加错误处理
          if ! curl -fsSL "https://raw.githubusercontent.com/go4sharing/sub/refs/heads/main/sub.yaml" -o raw.yaml; then
            echo "Error: Failed to fetch raw configuration"
            exit 1
          fi
          # 检查文件是否为空
          if [ -z "$(cat raw.yaml)" ]; then
            echo "Error: raw.yaml is empty"
            exit 1
          fi

      - name: Extract and wrap in proxies: root
        run: |
          # 检查原始文件是否包含 proxies 字段
          if ! yq eval '.proxies | length > 0' raw.yaml >/dev/null; then
            echo "Error: raw.yaml does not contain valid proxies"
            exit 1
          fi
          # 生成带顶级 proxies 字段的文件
          yq eval '{proxies: .proxies}' raw.yaml > sub.yaml

      - name: Validate format
        run: |
          # 验证 proxies 数组非空且包含 name 字段
          if ! yq eval '.proxies[0].name' sub.yaml >/dev/null; then
            echo "Error: Invalid proxy format in sub.yaml"
            cat sub.yaml
            exit 1
          fi
          echo "Successfully generated proxies with top level"

      - name: Commit and push if changes exist
        run: |
          # 配置 Git 用户信息
          git config user.name "Actions"
          git config user.email "actions@github.com"
          # 检查文件变更
          if git diff --quiet sub.yaml; then
            echo "No changes to commit"
          else
            # 添加文件并提交变更
            git add sub.yaml
            git commit -m "Update formatted proxies $(date +'%Y-%m-%d %H:%M')"
            # 强制推送（可选，根据需求决定是否使用 --force）
            git push
          fi
